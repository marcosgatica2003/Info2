<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="es">
  <compounddef id="classelectro" kind="class" language="C++" prot="public">
    <compoundname>electro</compoundname>
    <includes refid="electro_8h" local="no">electro.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classelectro_1adb21603dd9984a65676eadcfee6fef1a" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int electro::_voltaje</definition>
        <argsstring></argsstring>
        <name>_voltaje</name>
        <qualifiedname>electro::_voltaje</qualifiedname>
        <briefdescription>
<para>Atrivuto privado constante que almacena el voltaje de funcionamiento. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="electro.h" line="33" column="28" bodyfile="electro.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classelectro_1a2691187f5faa897b2d261c23d73e3546" prot="private" static="no" mutable="no">
        <type>const <ref refid="classproducto" kindref="compound">producto</ref></type>
        <definition>const producto electro::_electro</definition>
        <argsstring></argsstring>
        <name>_electro</name>
        <qualifiedname>electro::_electro</qualifiedname>
        <briefdescription>
<para>Atrivuto objeto privado constante de la clase producto, almacena el precio y el nombre. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="electro.h" line="34" column="24" bodyfile="electro.h" bodystart="34" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classelectro_1abb8be64a552dc6d871cb6cd1bc6930d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>electro::electro</definition>
        <argsstring>(std::string nombre, float precio, unsigned int voltaje)</argsstring>
        <name>electro</name>
        <qualifiedname>electro::electro</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>nombre</declname>
        </param>
        <param>
          <type>float</type>
          <declname>precio</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>voltaje</declname>
        </param>
        <briefdescription>
<para>Constructor de la clase electro. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>std::string</parametername>
</parameternamelist>
<parameterdescription>
<para>nombre: almacena el nombre del electrodoméstico en una variable string de la clase estándar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>float</parametername>
</parameternamelist>
<parameterdescription>
<para>precio: almaceena el precio en un flotante. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unsigned</parametername>
</parameternamelist>
<parameterdescription>
<para>int voltaje: almacena el voltaje de funcionamiento. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="electro.h" line="23" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classelectro_1aa987f9c8ee25989174d6b10eed1112a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void electro::mostrarElectro</definition>
        <argsstring>() const</argsstring>
        <name>mostrarElectro</name>
        <qualifiedname>electro::mostrarElectro</qualifiedname>
        <briefdescription>
<para>void <ref refid="classelectro_1aa987f9c8ee25989174d6b10eed1112a8" kindref="member">mostrarElectro() const</ref>: función contrante que muestra datos del electrodoméstico. Imprime en salida estándar datos del voltaje y el producto. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="electro.h" line="30" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Clase para almacenar datos de un producto electrodoméstico. Almacena el nombre del electrodoméstico, su precio y el voltaje con el que funciona. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>electro</label>
        <link refid="classelectro"/>
      </node>
    </collaborationgraph>
    <location file="electro.h" line="13" column="1" bodyfile="electro.h" bodystart="13" bodyend="35"/>
    <listofallmembers>
      <member refid="classelectro_1a2691187f5faa897b2d261c23d73e3546" prot="private" virt="non-virtual"><scope>electro</scope><name>_electro</name></member>
      <member refid="classelectro_1adb21603dd9984a65676eadcfee6fef1a" prot="private" virt="non-virtual"><scope>electro</scope><name>_voltaje</name></member>
      <member refid="classelectro_1abb8be64a552dc6d871cb6cd1bc6930d3" prot="public" virt="non-virtual"><scope>electro</scope><name>electro</name></member>
      <member refid="classelectro_1aa987f9c8ee25989174d6b10eed1112a8" prot="public" virt="non-virtual"><scope>electro</scope><name>mostrarElectro</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
