<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="es">
  <compounddef id="classalimento" kind="class" language="C++" prot="public">
    <compoundname>alimento</compoundname>
    <includes refid="alimento_8h" local="no">alimento.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classalimento_1a879b2a6a3723df35a0ddcc61dc4e7f74" prot="private" static="no" mutable="no">
        <type>const <ref refid="classfecha" kindref="compound">fecha</ref></type>
        <definition>const fecha alimento::_caducidad</definition>
        <argsstring></argsstring>
        <name>_caducidad</name>
        <qualifiedname>alimento::_caducidad</qualifiedname>
        <briefdescription>
<para>Atributo objeto privado fecha que almacena la fecha de caducidad. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alimento.h" line="33" column="21" bodyfile="alimento.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classalimento_1abc7f199047a7f8f7b2b9268ec9bcab2f" prot="private" static="no" mutable="no">
        <type>const <ref refid="classproducto" kindref="compound">producto</ref></type>
        <definition>const producto alimento::_alimento</definition>
        <argsstring></argsstring>
        <name>_alimento</name>
        <qualifiedname>alimento::_alimento</qualifiedname>
        <briefdescription>
<para>Atributo objeto privado que almacena datos del producto. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alimento.h" line="34" column="24" bodyfile="alimento.h" bodystart="34" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classalimento_1ab671a0a28360f4888f139f7b64855eed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>alimento::alimento</definition>
        <argsstring>(std::string nombre, float precio, unsigned int dia, unsigned int mes, unsigned int anio)</argsstring>
        <name>alimento</name>
        <qualifiedname>alimento::alimento</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>nombre</declname>
        </param>
        <param>
          <type>float</type>
          <declname>precio</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>dia</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>mes</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>anio</declname>
        </param>
        <briefdescription>
<para>Constructor de la clase alimento. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>std::string</parametername>
</parameternamelist>
<parameterdescription>
<para>nombre: almacena el nombre en un string de la bilbioteca estándar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>float</parametername>
</parameternamelist>
<parameterdescription>
<para>precio: almacena el precio en un flotante. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unsigned</parametername>
</parameternamelist>
<parameterdescription>
<para>int dia, mes y anio: almacena la fecha de caducidad. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alimento.h" line="24" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classalimento_1a2004178194700f11cd859c3726bd09c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void alimento::mostrarAlimento</definition>
        <argsstring>() const</argsstring>
        <name>mostrarAlimento</name>
        <qualifiedname>alimento::mostrarAlimento</qualifiedname>
        <briefdescription>
<para>void <ref refid="classalimento_1a2004178194700f11cd859c3726bd09c2" kindref="member">mostrarAlimento() const</ref> Función constante que muestra datos del alimento en salida estándar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="alimento.h" line="31" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>clase que almacena un producto alimenticio. Almacena el nombre, precio y la fecha de caducidad. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>alimento</label>
        <link refid="classalimento"/>
      </node>
    </collaborationgraph>
    <location file="alimento.h" line="14" column="1" bodyfile="alimento.h" bodystart="14" bodyend="35"/>
    <listofallmembers>
      <member refid="classalimento_1abc7f199047a7f8f7b2b9268ec9bcab2f" prot="private" virt="non-virtual"><scope>alimento</scope><name>_alimento</name></member>
      <member refid="classalimento_1a879b2a6a3723df35a0ddcc61dc4e7f74" prot="private" virt="non-virtual"><scope>alimento</scope><name>_caducidad</name></member>
      <member refid="classalimento_1ab671a0a28360f4888f139f7b64855eed" prot="public" virt="non-virtual"><scope>alimento</scope><name>alimento</name></member>
      <member refid="classalimento_1a2004178194700f11cd859c3726bd09c2" prot="public" virt="non-virtual"><scope>alimento</scope><name>mostrarAlimento</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
